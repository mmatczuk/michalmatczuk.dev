<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on michalmatczuk.dev</title><link>https://michalmatczuk.dev/posts/</link><description>Recent content in Posts on michalmatczuk.dev</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 27 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://michalmatczuk.dev/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Shaving 40% Off Google’s B-Tree Implementation with Go Generics</title><link>https://michalmatczuk.dev/posts/gocqlx-a-productivity-toolkit-for-scylla-in-go/</link><pubDate>Wed, 27 Apr 2022 00:00:00 +0000</pubDate><guid>https://michalmatczuk.dev/posts/gocqlx-a-productivity-toolkit-for-scylla-in-go/</guid><description>This blog post has been first published in ScyllaDB blog.
Discussions: Hacker News | Reddit.
There are many reasons to be excited about generics in Go. In this blog post I&amp;rsquo;m going to show how, using the generics, we got a 40% performance gain in an already well optimized package, the Google B-Tree implementation.
A B-Tree is a kind of self-balancing tree. For the purpose of this blog post it&amp;rsquo;s sufficient to say that it is a collection.</description></item><item><title>ScyllaDB Manager 2.4: Cloning a Database Cluster</title><link>https://michalmatczuk.dev/posts/scylladb-manager-24-cloning-a-database-cluster/</link><pubDate>Wed, 30 Jun 2021 00:00:00 +0000</pubDate><guid>https://michalmatczuk.dev/posts/scylladb-manager-24-cloning-a-database-cluster/</guid><description>This blog post has been first published in ScyllaDB blog.
Cloning a database cluster is probably the most common usage of backup data. This process can be very useful in case of a catastrophic event — say you were running in a single DC and it just burnt down overnight. (For the record, we are always encouraging you to follow our high availability and disaster recovery best practices to avoid such catastrophic failures.</description></item><item><title>ScyllaDB Manager 2.2: Repair Revisited</title><link>https://michalmatczuk.dev/posts/scylladb-manager-22-repair-revisited/</link><pubDate>Thu, 12 Nov 2020 00:00:00 +0000</pubDate><guid>https://michalmatczuk.dev/posts/scylladb-manager-22-repair-revisited/</guid><description>This blog post has been first published in ScyllaDB blog.
We released ScyllaDB Manager 1.0 to help our users manage repairs in February 2018. Since then a lot of things have changed. We added the row-level repair to ScyllaDB Open Source NoSQL Database, and to the Enterprise version this year. We just released ScyllaDB Manager 2.2 with a new repair method optimized for row-level repair.
New repair features in ScyllaDB Manager 2.</description></item><item><title>Working from Home: An Honest Look at the Remote Work Lifestyle</title><link>https://michalmatczuk.dev/posts/working-from-home-an-honest-look-at-the-remote-work-lifestyle/</link><pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate><guid>https://michalmatczuk.dev/posts/working-from-home-an-honest-look-at-the-remote-work-lifestyle/</guid><description>This blog post has been first published in ScyllaDB blog.
When offices close due to COVID-19 pandemic, many more of us will work from home, perhaps for the first time. Some people are thrilled about this idea. In social media you can find opinions like Coronavirus Will Make it Hard to Go Back to the Office after Experiencing the Benefits of Remote Work. While the benefits they highlight are true it looks to me like an advertisement for remote work, completely disregarding costs and the downsides of it.</description></item><item><title>Gocqlx: A Productivity Toolkit for Scylla in Go</title><link>https://michalmatczuk.dev/posts/gocqlx-a-productivity-toolkit-for-scylla-in-go/</link><pubDate>Fri, 25 Aug 2017 00:00:00 +0000</pubDate><guid>https://michalmatczuk.dev/posts/gocqlx-a-productivity-toolkit-for-scylla-in-go/</guid><description>This blog post has been first published in ScyllaDB blog.
Gocqlx is an extension to the Go Scylla / Apache Cassandra driver Gocql. It aims to boost developer productivity while not sacrificing query performance. It’s inspired by jmoiron/sqlx, a tool for working with SQL databases, but it goes beyond what sqlx provides.
For this blog post, we will pretend we’re a microblogging service and use the following schema:
CREATETABLEtweet(timelinetext,iduuid,texttext,in_reply_to_screen_nametext,in_reply_to_user_idbigint,PRIMARYKEY(timeline,id));Gocql is a very popular Cassandra driver for the Go programming language.</description></item></channel></rss>